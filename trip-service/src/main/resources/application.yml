server:
  port: ${SERVER_PORT:8083}
  servlet:
    context-path: /

spring:
  application:
    name: trip-service
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
    
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:tripgen_trip}
    username: ${DB_USERNAME:tripgen}
    password: ${DB_PASSWORD:tripgen_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
  
  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DATABASE:0}
      timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: ${CACHE_TTL:3600000} # 1 hour
      cache-null-values: false
  
  # Azure Service Bus Configuration
  cloud:
    azure:
      servicebus:
        connection-string: ${SERVICE_BUS_CONNECTION_STRING:}
        
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWK_SET_URI:http://localhost:8081/auth/realms/tripgen/protocol/openid_connect/certs}
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

# JWT Configuration (Application-level, not Spring Security)
security:
  jwt:
    secret: ${JWT_SECRET:tripgen-jwt-secret-key-very-long-and-secure-for-production-use-only-change-this-in-production}
    expiration: ${JWT_EXPIRATION:86400} # 1 day

# Feign Client Configuration
feign:
  client:
    config:
      default:
        connect-timeout: 5000
        read-timeout: 10000
        logger-level: basic
      user-service:
        url: ${USER_SERVICE_URL:http://localhost:8081}
      location-service:
        url: ${LOCATION_SERVICE_URL:http://localhost:8082}
      ai-service:
        url: ${AI_SERVICE_URL:http://localhost:8084}

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: when-authorized
  health:
    redis:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.unicorn.tripgen: ${LOG_LEVEL_APP:INFO}
    org.springframework.cloud.openfeign: ${LOG_LEVEL_FEIGN:DEBUG}
    org.springframework.web: ${LOG_LEVEL_WEB:DEBUG}
    org.hibernate.SQL: ${LOG_LEVEL_SQL:DEBUG}
    org.hibernate.type.descriptor.sql.BasicBinder: ${LOG_LEVEL_SQL_BINDER:TRACE}
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:logs/trip-service.log}
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 7
      total-size-cap: 100MB

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
  show-actuator: false

# Application Specific Configuration
trip:
  service:
    # Trip Configuration
    max-members-per-trip: 10
    max-destinations-per-trip: 10
    max-trip-duration-days: 365
    
    # Schedule Configuration
    max-places-per-day: 20
    max-schedule-generation-retries: 3
    schedule-generation-timeout: 300 # seconds
    
    # Export Configuration
    export:
      max-file-size: 10485760 # 10MB
      supported-formats: 
        - pdf
        - image
      temp-directory: ${java.io.tmpdir}/trip-exports
    
    # Cache Configuration
    cache:
      schedule-ttl: 1800 # 30 minutes
      recommendation-ttl: 3600 # 1 hour
      trip-list-ttl: 300 # 5 minutes

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: true

logging:
  level:
    com.unicorn.tripgen: ${LOG_LEVEL_APP:DEBUG}
    root: ${LOG_LEVEL_ROOT:INFO}
