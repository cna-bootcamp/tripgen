@startuml
!theme mono

title Trip 서비스 클래스 설계 (간단 버전)

package "UseCase (in)" {
    interface TripUseCase
    interface MemberUseCase
    interface DestinationUseCase
    interface ScheduleUseCase
}

package "Port (out)" {
    interface TripRepository
    interface MemberRepository
    interface DestinationRepository
    interface ScheduleRepository
    interface AIService
    interface ExportService
    interface UserContextService
    interface CacheService
    interface EventPublisher
}

package "Service" {
    class TripService
    class MemberService
    class DestinationService
    class ScheduleService
}

package "Domain" {
    class Trip {
        +tripId: String
        +userId: String
        +tripName: String
        +transportMode: TransportMode
        +status: TripStatus
        +startDate: LocalDate
        +endDate: LocalDate
    }

    class Member {
        +memberId: String
        +tripId: String
        +name: String
        +age: Integer
        +gender: Gender
        +healthStatus: HealthStatus
        +preferences: List<ActivityPreference>
    }

    class Destination {
        +destinationId: String
        +tripId: String
        +destinationName: String
        +nights: Integer
        +accommodation: String
        +checkInTime: LocalTime
        +checkOutTime: LocalTime
        +startDate: LocalDate
        +endDate: LocalDate
        +order: Integer
    }

    class Schedule {
        +scheduleId: String
        +tripId: String
        +day: Integer
        +date: LocalDate
        +city: String
        +weather: Weather
        +places: List<Place>
    }

    class Place {
        +placeId: String
        +placeName: String
        +category: String
        +startTime: LocalTime
        +duration: Integer
        +transportation: Transportation
        +healthConsideration: HealthConsideration
        +order: Integer
    }

    enum TripStatus {
        PLANNING
        IN_PROGRESS
        COMPLETED
    }

    enum TransportMode {
        PUBLIC
        CAR
    }
}

package "Controller" {
    class TripController
    class MemberController
    class DestinationController
    class ScheduleController
}

package "Gateway/Repository" {
    class JpaTripRepository
    class JpaMemberRepository
    class JpaDestinationRepository
    class JpaScheduleRepository
}

package "Gateway/External" {
    class RestAIService
    class PdfExportService
    class ImageExportService
    class SecurityContextUserService
    class RedisCacheService
    class ApplicationEventPublisher
}

package "Entity" {
    class TripEntity
    class MemberEntity
    class DestinationEntity
    class ScheduleEntity
}

' Use Case Implementations
TripUseCase <|.. TripService
MemberUseCase <|.. MemberService
DestinationUseCase <|.. DestinationService
ScheduleUseCase <|.. ScheduleService

' Repository Implementations
TripRepository <|.. JpaTripRepository
MemberRepository <|.. JpaMemberRepository
DestinationRepository <|.. JpaDestinationRepository
ScheduleRepository <|.. JpaScheduleRepository

' Service Implementations
AIService <|.. RestAIService
ExportService <|.. PdfExportService
ExportService <|.. ImageExportService
UserContextService <|.. SecurityContextUserService
CacheService <|.. RedisCacheService
EventPublisher <|.. ApplicationEventPublisher

' Domain Relationships
Trip ||--o{ Member
Trip ||--o{ Destination
Trip ||--o{ Schedule
Schedule ||--o{ Place

' Controller Dependencies
TripController --> TripUseCase
MemberController --> MemberUseCase
DestinationController --> DestinationUseCase
ScheduleController --> ScheduleUseCase

' Service Dependencies
TripService --> TripRepository
TripService --> UserContextService
TripService --> CacheService
TripService --> EventPublisher

MemberService --> MemberRepository
MemberService --> TripRepository

DestinationService --> DestinationRepository
DestinationService --> TripRepository

ScheduleService --> ScheduleRepository
ScheduleService --> AIService
ScheduleService --> ExportService
ScheduleService --> CacheService

@enduml