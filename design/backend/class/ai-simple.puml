@startuml
!theme mono

title AI 서비스 간단 클래스 설계서 (Layered Architecture)

' ======================================
' Controller Layer
' ======================================
package "Controller Layer" <<Node>> {
    class AIScheduleController {
        +generateAISchedule()
        +getGenerationStatus()
        +getGeneratedSchedule()
        +cancelGeneration()
        +regenerateDaySchedule()
        +analyzeWeatherImpact()
    }

    class AIRecommendationController {
        +generatePlaceRecommendations()
    }
}

' ======================================
' Service Layer
' ======================================
package "Service Layer" <<Node>> {
    interface AIScheduleService
    class AIScheduleServiceImpl {
        +generateSchedule()
        +getGenerationStatus()
        +getGeneratedSchedule()
        +cancelGeneration()
        +regenerateDaySchedule()
        +analyzeWeatherImpact()
    }

    interface AIRecommendationService
    class AIRecommendationServiceImpl {
        +generatePlaceRecommendations()
        +getCachedRecommendations()
        +cacheRecommendations()
    }

    class AIJobService {
        +createJob()
        +updateJobStatus()
        +completeJob()
        +failJob()
        +getJobStatus()
        +cancelJob()
    }
}

' ======================================
' Repository Layer
' ======================================
package "Repository Layer" <<Database>> {
    interface AIScheduleRepository {
        +save()
        +findByRequestId()
        +findByTripId()
        +deleteByRequestId()
    }

    interface AIJobRepository {
        +save()
        +findByRequestId()
        +findByStatus()
        +updateJobStatus()
    }

    interface AIRecommendationRepository {
        +save()
        +findByPlaceIdAndProfileHash()
        +findByPlaceId()
        +deleteExpired()
    }
}

' ======================================
' Entity Layer
' ======================================
package "Entity Layer" <<Database>> {
    class AISchedule {
        -String requestId
        -String tripId
        -AIJobStatus status
        -String scheduleData
        -LocalDateTime generatedAt
    }

    class AIJob {
        -String requestId
        -AIJobType jobType
        -AIJobStatus status
        -int progress
        -String currentStep
    }

    class AIRecommendation {
        -String placeId
        -String profileHash
        -String recommendationData
        -LocalDateTime generatedAt
    }
}

' ======================================
' External Clients
' ======================================
package "External Clients" <<Cloud>> {
    interface AIModelClient
    class OpenAIClient
    class ClaudeClient
    
    interface WeatherServiceClient
    interface LocationServiceClient
}

' ======================================
' DTO Layer
' ======================================
package "DTO Layer" <<Folder>> {
    class GenerateScheduleRequest
    class GenerateScheduleResponse
    class GenerationStatusResponse
    class GeneratedScheduleDto
    class RecommendationRequest
    class RecommendationResponse
    class WeatherImpactRequest
    class WeatherImpactResponse
}

' ======================================
' Enums
' ======================================
package "Enums" <<Folder>> {
    enum AIJobType {
        SCHEDULE_GENERATION
        SCHEDULE_REGENERATION
        RECOMMENDATION_GENERATION
        WEATHER_IMPACT_ANALYSIS
    }

    enum AIJobStatus {
        QUEUED
        PROCESSING
        COMPLETED
        FAILED
        CANCELLED
    }
}

' ======================================
' Infrastructure
' ======================================
package "Infrastructure" <<Component>> {
    interface CacheManager
    interface MessageQueue
}

' ======================================
' Validation
' ======================================
package "Validation" <<Component>> {
    class AIScheduleValidator
    class RecommendationValidator
}

' ======================================
' Main Relationships
' ======================================

' Layered Architecture Flow
AIScheduleController --> AIScheduleService
AIScheduleController --> AIScheduleValidator
AIRecommendationController --> AIRecommendationService
AIRecommendationController --> RecommendationValidator

AIScheduleService <|.. AIScheduleServiceImpl
AIRecommendationService <|.. AIRecommendationServiceImpl

AIScheduleServiceImpl --> AIScheduleRepository
AIScheduleServiceImpl --> AIJobRepository
AIScheduleServiceImpl --> AIModelClient
AIScheduleServiceImpl --> WeatherServiceClient
AIScheduleServiceImpl --> LocationServiceClient
AIScheduleServiceImpl --> CacheManager
AIScheduleServiceImpl --> MessageQueue

AIRecommendationServiceImpl --> AIRecommendationRepository
AIRecommendationServiceImpl --> AIModelClient
AIRecommendationServiceImpl --> LocationServiceClient
AIRecommendationServiceImpl --> CacheManager

AIJobService --> AIJobRepository
AIJobService --> MessageQueue

' AI Model Client Implementations  
AIModelClient <|.. OpenAIClient
AIModelClient <|.. ClaudeClient

' Entity Usage
AIScheduleRepository --> AISchedule
AIJobRepository --> AIJob
AIRecommendationRepository --> AIRecommendation

AISchedule --> AIJobStatus
AIJob --> AIJobType
AIJob --> AIJobStatus

' DTO Usage by Controllers
AIScheduleController ..> GenerateScheduleRequest
AIScheduleController ..> GenerateScheduleResponse
AIScheduleController ..> GenerationStatusResponse
AIScheduleController ..> GeneratedScheduleDto
AIScheduleController ..> WeatherImpactRequest
AIScheduleController ..> WeatherImpactResponse

AIRecommendationController ..> RecommendationRequest
AIRecommendationController ..> RecommendationResponse

@enduml