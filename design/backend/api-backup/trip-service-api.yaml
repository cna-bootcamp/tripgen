openapi: 3.0.0
info:
  title: Trip Service API
  description: TripGen 여행 관리 서비스 - 여행 계획, 멤버 관리, 일정 생성 및 조회
  version: 1.0.0
  contact:
    name: 정백엔드
    email: backend@tripgen.com

servers:
  - url: http://localhost:8002/api/v1/trips
    description: Local server
  - url: https://api.tripgen.com/api/v1/trips
    description: Production server
  - url: https://virtserver.swaggerhub.com/tripgen/trip-service/1.0.0
    description: SwaggerHub Mock API

paths:
  /dashboard:
    get:
      x-user-story: UFR-TRIP-010, UFR-TRIP-020
      x-controller: DashboardController
      tags:
        - Dashboard
      summary: 대시보드 조회
      description: 사용자의 대시보드 정보 조회 (배너, 여행 목록)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 대시보드 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /trips:
    post:
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - Trip Management
      summary: 새 여행 생성
      description: 새로운 여행 계획 생성 (기본 설정)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
      responses:
        '201':
          description: 여행 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      x-user-story: UFR-TRIP-110
      x-controller: TripController
      tags:
        - Trip Management
      summary: 여행 목록 조회
      description: 사용자의 전체 여행 목록 조회 (필터링, 정렬, 검색)
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [all, planning, traveling, completed]
            default: all
          description: 여행 상태 필터
        - name: search
          in: query
          schema:
            type: string
          description: 검색어 (여행명, 여행지명)
        - name: sort
          in: query
          schema:
            type: string
            enum: [latest, oldest, startDate, name]
            default: latest
          description: 정렬 옵션
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: 페이지 번호
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 12
          description: 페이지당 항목 수
      responses:
        '200':
          description: 여행 목록
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripListResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /trips/{tripId}:
    get:
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - Trip Management
      summary: 여행 상세 조회
      description: 특정 여행의 상세 정보 조회
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 여행 상세 정보
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDetailResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    put:
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - Trip Management
      summary: 여행 기본정보 수정
      description: 여행명, 이동수단 등 기본정보 수정
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      x-user-story: UFR-TRIP-110
      x-controller: TripController
      tags:
        - Trip Management
      summary: 여행 삭제
      description: 여행 계획 삭제
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/members:
    post:
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - Member Management
      summary: 멤버 추가
      description: 여행에 멤버 추가
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMemberRequest'
      responses:
        '201':
          description: 멤버 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
        '400':
          description: 잘못된 요청 또는 멤버 수 초과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/members/{memberId}:
    put:
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - Member Management
      summary: 멤버 정보 수정
      description: 여행 멤버 정보 수정
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/MemberId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - Member Management
      summary: 멤버 삭제
      description: 여행에서 멤버 제거
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/MemberId'
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/destinations:
    post:
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - Destination Management
      summary: 여행지 추가
      description: 여행 계획에 새 여행지 추가
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestinationRequest'
      responses:
        '201':
          description: 여행지 추가 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/destinations/{destinationId}:
    put:
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - Destination Management
      summary: 여행지 정보 수정
      description: 여행지 정보 및 숙소 정보 수정
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/DestinationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

    delete:
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - Destination Management
      summary: 여행지 삭제
      description: 여행 계획에서 여행지 제거
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/DestinationId'
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/generate:
    post:
      x-user-story: UFR-TRIP-050
      x-controller: ScheduleController
      tags:
        - Schedule Generation
      summary: AI 일정 생성 요청
      description: AI 서비스에 여행 일정 생성 요청
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateScheduleRequest'
      responses:
        '202':
          description: 생성 요청 접수됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateScheduleResponse'
        '400':
          description: 잘못된 요청 (필수 정보 부족)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/status:
    get:
      x-user-story: UFR-TRIP-050
      x-controller: ScheduleController
      tags:
        - Schedule Generation
      summary: 일정 생성 진행 상태 조회
      description: AI 일정 생성 진행 상황 확인
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 진행 상태
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleStatusResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule:
    get:
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 생성된 일정 조회
      description: AI가 생성한 여행 일정 조회
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: day
          in: query
          schema:
            type: integer
            minimum: 1
          description: 특정 날짜 일정만 조회
      responses:
        '200':
          description: 일정 조회 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/regenerate:
    post:
      x-user-story: UFR-TRIP-070
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 전체 일정 재생성
      description: 전체 여행 일정 다시 생성
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateScheduleRequest'
      responses:
        '202':
          description: 재생성 요청 접수됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateScheduleResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/days/{dayNumber}/regenerate:
    post:
      x-user-story: UFR-TRIP-070
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 특정 날짜 일정 재생성
      description: 특정 날짜의 일정만 다시 생성
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: dayNumber
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: 재생성할 날짜 번호
      responses:
        '202':
          description: 재생성 요청 접수됨
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateScheduleResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '429':
          description: 재생성 횟수 초과 (일자별 최대 5회)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /trips/{tripId}/schedule/places/{placeId}:
    delete:
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 일정에서 장소 삭제
      description: 생성된 일정에서 특정 장소 제거
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: placeId
          in: path
          required: true
          schema:
            type: string
          description: 삭제할 장소 ID
      responses:
        '200':
          description: 삭제 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/places/reorder:
    put:
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 장소 순서 변경
      description: 드래그 앤 드롭으로 장소 방문 순서 변경
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReorderPlacesRequest'
      responses:
        '200':
          description: 순서 변경 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 잘못된 요청
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/schedule/map:
    get:
      x-user-story: UFR-TRIP-080
      x-controller: ScheduleController
      tags:
        - Schedule Management
      summary: 일정 지도 데이터 조회
      description: 지도에 표시할 여행 경로 데이터 조회
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: day
          in: query
          schema:
            type: integer
            minimum: 1
          description: 특정 날짜만 표시
        - name: type
          in: query
          schema:
            type: string
            enum: [static, dynamic]
            default: dynamic
          description: 지도 유형
      responses:
        '200':
          description: 지도 데이터
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapDataResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

  /trips/{tripId}/export:
    post:
      x-user-story: UFR-TRIP-100
      x-controller: ExportController
      tags:
        - Export
      summary: 일정 내보내기
      description: 여행 일정을 PDF 또는 이미지로 내보내기
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportRequest'
      responses:
        '200':
          description: 내보내기 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportResponse'
            application/pdf:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'

components:
  parameters:
    TripId:
      name: tripId
      in: path
      required: true
      schema:
        type: string
      description: 여행 ID

    MemberId:
      name: memberId
      in: path
      required: true
      schema:
        type: string
      description: 멤버 ID

    DestinationId:
      name: destinationId
      in: path
      required: true
      schema:
        type: string
      description: 여행지 ID

  schemas:
    DashboardResponse:
      type: object
      properties:
        banners:
          type: array
          items:
            $ref: '#/components/schemas/Banner'
        trips:
          type: object
          properties:
            traveling:
              type: array
              items:
                $ref: '#/components/schemas/TripCard'
              maxItems: 3
            planning:
              type: array
              items:
                $ref: '#/components/schemas/TripCard'
              maxItems: 3
            completed:
              type: array
              items:
                $ref: '#/components/schemas/TripCard'
              maxItems: 3
            hasMore:
              type: boolean
              description: 추억중 섹션에 더 많은 여행이 있는지 여부

    Banner:
      type: object
      properties:
        type:
          type: string
          enum: [new_trip, search_places]
        title:
          type: string
        description:
          type: string
        icon:
          type: string
        action:
          type: string
          description: 클릭 시 이동할 경로

    TripCard:
      type: object
      properties:
        tripId:
          type: string
        tripName:
          type: string
        imageUrl:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        status:
          type: string
          enum: [planning, traveling, completed]
        statusBadge:
          type: string
          description: 진행상황 뱃지 텍스트
          example: "D+5"
        progress:
          type: object
          properties:
            type:
              type: string
              enum: [percentage, steps]
            value:
              type: number
              description: 진행률 (0-100) 또는 단계 번호
            totalSteps:
              type: integer
              description: 계획중일 때 전체 단계 수
            currentStep:
              type: string
              description: 현재 단계명

    CreateTripRequest:
      type: object
      required:
        - tripName
        - transportation
      properties:
        tripName:
          type: string
          maxLength: 16
          description: 여행명
          example: "뮌헨 가족여행"
        transportation:
          type: string
          enum: [public, car]
          description: 이동수단
          example: "car"
        members:
          type: array
          items:
            $ref: '#/components/schemas/CreateMemberRequest'
          minItems: 1
          maxItems: 10

    TripResponse:
      type: object
      properties:
        tripId:
          type: string
        tripName:
          type: string
        transportation:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'

    UpdateTripRequest:
      type: object
      properties:
        tripName:
          type: string
          maxLength: 16
        transportation:
          type: string
          enum: [public, car]

    TripDetailResponse:
      allOf:
        - $ref: '#/components/schemas/TripResponse'
        - type: object
          properties:
            destinations:
              type: array
              items:
                $ref: '#/components/schemas/Destination'
            schedule:
              $ref: '#/components/schemas/ScheduleSummary'

    CreateMemberRequest:
      type: object
      required:
        - name
        - age
        - gender
        - healthStatus
      properties:
        name:
          type: string
          description: 멤버 이름
          example: "홍길동"
        age:
          type: integer
          minimum: 1
          maximum: 120
          example: 35
        gender:
          type: string
          enum: [male, female, other]
          example: "male"
        healthStatus:
          type: string
          enum: [excellent, good, caution, limited]
          description: 건강상태 (우수/양호/주의/제한)
          example: "good"
        preferences:
          type: array
          items:
            type: string
            enum: [sightseeing, shopping, culture, nature, sports, rest]
          description: 활동 선호도
          example: ["sightseeing", "culture"]

    UpdateMemberRequest:
      $ref: '#/components/schemas/CreateMemberRequest'

    Member:
      allOf:
        - $ref: '#/components/schemas/CreateMemberRequest'
        - type: object
          properties:
            memberId:
              type: string

    MemberResponse:
      $ref: '#/components/schemas/Member'

    CreateDestinationRequest:
      type: object
      required:
        - destinationName
        - nights
      properties:
        destinationName:
          type: string
          maxLength: 20
          description: 여행지명
          example: "뮌헨"
        nights:
          type: integer
          minimum: 1
          description: 숙박일수
          example: 3
        accommodationName:
          type: string
          maxLength: 20
          description: 숙소명
          example: "뮌헨 센트럴 호텔"
        checkInTime:
          type: string
          format: time
          description: 체크인 시간
          example: "15:00"
        checkOutTime:
          type: string
          format: time
          description: 체크아웃 시간
          example: "11:00"

    UpdateDestinationRequest:
      $ref: '#/components/schemas/CreateDestinationRequest'

    Destination:
      allOf:
        - $ref: '#/components/schemas/CreateDestinationRequest'
        - type: object
          properties:
            destinationId:
              type: string
            startDate:
              type: string
              format: date
              description: 자동 계산된 시작일
            endDate:
              type: string
              format: date
              description: 자동 계산된 종료일

    DestinationResponse:
      $ref: '#/components/schemas/Destination'

    GenerateScheduleRequest:
      type: object
      required:
        - startTime
      properties:
        startTime:
          type: object
          required:
            - hour
            - minute
          properties:
            hour:
              type: integer
              minimum: 0
              maximum: 23
              example: 9
            minute:
              type: integer
              enum: [0, 10, 20, 30, 40, 50]
              example: 0
        specialRequests:
          type: string
          maxLength: 500
          description: 특별 요청사항
          example: "박물관 위주로 일정을 짜주세요"

    GenerateScheduleResponse:
      type: object
      properties:
        requestId:
          type: string
          description: 생성 요청 ID
        status:
          type: string
          enum: [pending, processing, completed, failed]
        message:
          type: string

    RegenerateScheduleRequest:
      $ref: '#/components/schemas/GenerateScheduleRequest'

    ScheduleStatusResponse:
      type: object
      properties:
        requestId:
          type: string
        status:
          type: string
          enum: [pending, processing, completed, failed, cancelled]
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: 진행률
        currentStep:
          type: string
          description: 현재 처리 단계
          example: "경로 최적화 중..."
        estimatedTime:
          type: integer
          description: 예상 남은 시간 (초)
        result:
          type: object
          description: 완료 시 결과 요약

    ScheduleResponse:
      type: object
      properties:
        tripId:
          type: string
        tripName:
          type: string
        totalDays:
          type: integer
        days:
          type: array
          items:
            $ref: '#/components/schemas/DaySchedule'

    ScheduleSummary:
      type: object
      properties:
        generated:
          type: boolean
          description: 일정 생성 여부
        lastGeneratedAt:
          type: string
          format: date-time
        regenerateCount:
          type: object
          additionalProperties:
            type: integer
          description: 날짜별 재생성 횟수

    DaySchedule:
      type: object
      properties:
        dayNumber:
          type: integer
        date:
          type: string
          format: date
        city:
          type: string
        weather:
          $ref: '#/components/schemas/WeatherInfo'
        places:
          type: array
          items:
            $ref: '#/components/schemas/SchedulePlace'
        routes:
          type: array
          items:
            $ref: '#/components/schemas/RouteInfo'

    WeatherInfo:
      type: object
      properties:
        condition:
          type: string
          enum: [sunny, cloudy, rainy, snowy, stormy]
        temperature:
          type: object
          properties:
            high:
              type: number
            low:
              type: number
        icon:
          type: string
        humidity:
          type: number
        precipitation:
          type: number
        windSpeed:
          type: number
        airQuality:
          type: string
          enum: [good, moderate, unhealthy, hazardous]
        uvIndex:
          type: integer
          minimum: 0
          maximum: 11

    SchedulePlace:
      type: object
      properties:
        placeId:
          type: string
        placeName:
          type: string
        category:
          type: string
        location:
          type: object
          properties:
            lat:
              type: number
            lng:
              type: number
            address:
              type: string
        timeSlot:
          type: object
          properties:
            startTime:
              type: string
              format: time
            endTime:
              type: string
              format: time
            duration:
              type: integer
              description: 소요 시간 (분)
        accessibility:
          type: object
          properties:
            wheelchairAccessible:
              type: boolean
            elevator:
              type: boolean
            restArea:
              type: boolean
            parkingAvailable:
              type: boolean
        healthTags:
          type: array
          items:
            type: string
          description: 건강상태 관련 태그
          example: ["휴식포인트", "엘리베이터", "평탄한길"]
        alternatives:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [weather, health, preference]
              suggestion:
                type: string

    RouteInfo:
      type: object
      properties:
        fromPlaceId:
          type: string
        toPlaceId:
          type: string
        transportation:
          type: string
          enum: [walk, car, public]
        duration:
          type: integer
          description: 이동 시간 (분)
        distance:
          type: number
          description: 거리 (km)
        details:
          type: object
          properties:
            path:
              type: string
              description: 구체적 경로 설명
            calories:
              type: number
              description: 도보 시 칼로리 소모량
            transitInfo:
              type: string
              description: 대중교통 상세 정보
            parkingInfo:
              type: string
              description: 주차장 정보

    ReorderPlacesRequest:
      type: object
      required:
        - dayNumber
        - placeIds
      properties:
        dayNumber:
          type: integer
        placeIds:
          type: array
          items:
            type: string
          description: 새로운 순서의 장소 ID 배열

    MapDataResponse:
      type: object
      properties:
        center:
          type: object
          properties:
            lat:
              type: number
            lng:
              type: number
        zoom:
          type: integer
        markers:
          type: array
          items:
            $ref: '#/components/schemas/MapMarker'
        routes:
          type: array
          items:
            $ref: '#/components/schemas/MapRoute'

    MapMarker:
      type: object
      properties:
        placeId:
          type: string
        position:
          type: object
          properties:
            lat:
              type: number
            lng:
              type: number
        label:
          type: string
        dayNumber:
          type: integer
        visitTime:
          type: string

    MapRoute:
      type: object
      properties:
        dayNumber:
          type: integer
        color:
          type: string
        path:
          type: array
          items:
            type: object
            properties:
              lat:
                type: number
              lng:
                type: number
        transportation:
          type: string
        style:
          type: string
          enum: [solid, dashed]

    ExportRequest:
      type: object
      required:
        - format
      properties:
        format:
          type: string
          enum: [pdf, image]
        options:
          type: object
          properties:
            includeMaps:
              type: boolean
              default: true
            paperSize:
              type: string
              enum: [A4, letter]
              default: A4
            imageFormat:
              type: string
              enum: [png, jpg]
              default: png

    ExportResponse:
      type: object
      properties:
        downloadUrl:
          type: string
        filename:
          type: string
        expiresAt:
          type: string
          format: date-time

    TripListResponse:
      type: object
      properties:
        trips:
          type: array
          items:
            $ref: '#/components/schemas/TripCard'
        pagination:
          type: object
          properties:
            page:
              type: integer
            limit:
              type: integer
            total:
              type: integer
            totalPages:
              type: integer

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: string
        message:
          type: string
        details:
          type: object

  responses:
    UnauthorizedError:
      description: 인증 토큰이 없거나 유효하지 않음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFoundError:
      description: 요청한 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Dashboard
    description: 대시보드 관련 API
  - name: Trip Management
    description: 여행 관리 API
  - name: Member Management
    description: 여행 멤버 관리 API
  - name: Destination Management
    description: 여행지 관리 API
  - name: Schedule Generation
    description: AI 일정 생성 관련 API
  - name: Schedule Management
    description: 생성된 일정 관리 API
  - name: Export
    description: 일정 내보내기 API