openapi: 3.0.0
info:
  title: Trip Service API
  description: 여행 기본정보, 여행지 정보, 시간별 상세일정 요청/저장 관리 API
  version: 1.0.0
  contact:
    name: TripGen Development Team
    email: dev@tripgen.com

servers:
  - url: https://virtserver.swaggerhub.com/TRIPGEN/trip-service/1.0.0
    description: SwaggerHub API Auto Mocking
  - url: http://localhost:8082
    description: Local development server
  - url: https://api.tripgen.com/trip
    description: Production server

tags:
  - name: trips
    description: 여행 관리
  - name: members
    description: 여행 멤버 관리
  - name: destinations
    description: 여행지 관리
  - name: schedules
    description: 일정 관리

paths:
  /trips:
    get:
      summary: 여행 목록 조회
      description: 사용자의 여행 목록을 상태별로 조회합니다
      operationId: getTripList
      x-user-story: UFR-TRIP-020, UFR-TRIP-110
      x-controller: TripController
      tags:
        - trips
      parameters:
        - name: status
          in: query
          description: 여행 상태 필터
          schema:
            type: string
            enum: [all, planning, ongoing, completed]
            default: all
        - name: search
          in: query
          description: 검색 키워드 (여행명, 여행지명)
          schema:
            type: string
        - name: sort
          in: query
          description: 정렬 기준
          schema:
            type: string
            enum: [latest, oldest, startDate, name]
            default: latest
        - name: page
          in: query
          description: 페이지 번호
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: size
          in: query
          description: 페이지 크기
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripListResponse'
              example:
                trips:
                  - tripId: "trip_202501_001"
                    tripName: "독일 뮌헨 여행"
                    status: "planning"
                    currentStep: "기본설정"
                    startDate: "2025-09-01"
                    endDate: "2025-09-07"
                    memberCount: 2
                    destinationCount: 2
                    progress: 25
                    createdAt: "2025-07-27T10:00:00Z"
                    updatedAt: "2025-07-27T10:30:00Z"
                totalCount: 15
                currentPage: 1
                totalPages: 1
      security:
        - bearerAuth: []

    post:
      summary: 새 여행 생성
      description: 새로운 여행을 생성합니다
      operationId: createTrip
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - trips
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
            example:
              tripName: "독일 뮌헨 여행"
              transportMode: "car"
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []

  /trips/{tripId}:
    get:
      summary: 여행 상세 조회
      description: 특정 여행의 상세 정보를 조회합니다
      operationId: getTripDetail
      x-user-story: UFR-TRIP-020
      x-controller: TripController
      tags:
        - trips
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripDetailResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

    put:
      summary: 여행 기본정보 수정
      description: 여행명과 이동수단을 수정합니다
      operationId: updateTrip
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - trips
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

    delete:
      summary: 여행 삭제
      description: 여행을 삭제합니다
      operationId: deleteTrip
      x-user-story: UFR-TRIP-110
      x-controller: TripController
      tags:
        - trips
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '204':
          description: 삭제 성공
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/basic-info:
    put:
      summary: 여행 기본정보 일괄 저장
      description: 여행명, 이동수단, 멤버 정보를 한꺼번에 저장합니다
      operationId: updateTripBasicInfo
      x-user-story: UFR-TRIP-030
      x-controller: TripController
      tags:
        - trips
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTripBasicInfoRequest'
            example:
              tripName: "독일 뮌헨 여행"
              transportMode: "car"
              members:
                - name: "김철수"
                  age: 35
                  gender: "male"
                  healthStatus: "good"
                  preferences: ["sightseeing", "culture"]
                - name: "이영희"
                  age: 32
                  gender: "female"
                  healthStatus: "excellent"
                  preferences: ["shopping", "culture"]
      responses:
        '200':
          description: 저장 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TripBasicInfoResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/members:
    get:
      summary: 여행 멤버 목록 조회
      description: 여행에 참여하는 멤버 목록을 조회합니다
      operationId: getTripMembers
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - members
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MemberResponse'
      security:
        - bearerAuth: []

    post:
      summary: 멤버 추가
      description: 여행에 새로운 멤버를 추가합니다
      operationId: addTripMember
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - members
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMemberRequest'
            example:
              name: "김철수"
              age: 35
              gender: "male"
              healthStatus: "good"
              preferences: ["sightseeing", "culture"]
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []

  /trips/{tripId}/members/{memberId}:
    put:
      summary: 멤버 정보 수정
      description: 멤버 정보를 수정합니다
      operationId: updateTripMember
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - members
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/MemberId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

    delete:
      summary: 멤버 삭제
      description: 여행에서 멤버를 제거합니다
      operationId: deleteTripMember
      x-user-story: UFR-TRIP-030
      x-controller: MemberController
      tags:
        - members
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/MemberId'
      responses:
        '204':
          description: 삭제 성공
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/destinations/batch:
    put:
      summary: 여행지 정보 일괄 저장
      description: 여행지 정보를 한꺼번에 저장합니다 (기존 여행지는 모두 교체됩니다)
      operationId: updateTripDestinationsBatch
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - destinations
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationsBatchRequest'
            example:
              destinations:
                - destinationName: "뮌헨"
                  nights: 3
                  accommodation: "뮌헨 센트럴 호텔"
                  checkInTime: "15:00"
                  checkOutTime: "11:00"
                - destinationName: "하이델베르크"
                  nights: 2
                  accommodation: "하이델베르크 올드타운 호텔"
                  checkInTime: "14:00"
                  checkOutTime: "11:00"
      responses:
        '200':
          description: 저장 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationsBatchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/destinations:
    get:
      summary: 여행지 목록 조회
      description: 여행에 포함된 여행지 목록을 조회합니다
      operationId: getTripDestinations
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - destinations
      parameters:
        - $ref: '#/components/parameters/TripId'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DestinationResponse'
      security:
        - bearerAuth: []

    post:
      summary: 여행지 추가
      description: 새로운 여행지를 추가합니다
      operationId: addTripDestination
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - destinations
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDestinationRequest'
            example:
              destinationName: "뮌헨"
              nights: 3
              accommodation: "뮌헨 센트럴 호텔"
              checkInTime: "15:00"
              checkOutTime: "11:00"
      responses:
        '201':
          description: 생성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []

  /trips/{tripId}/destinations/{destinationId}:
    put:
      summary: 여행지 수정
      description: 여행지 정보를 수정합니다
      operationId: updateTripDestination
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - destinations
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/DestinationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDestinationRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DestinationResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

    delete:
      summary: 여행지 삭제
      description: 여행지를 삭제합니다
      operationId: deleteTripDestination
      x-user-story: UFR-TRIP-040
      x-controller: DestinationController
      tags:
        - destinations
      parameters:
        - $ref: '#/components/parameters/TripId'
        - $ref: '#/components/parameters/DestinationId'
      responses:
        '204':
          description: 삭제 성공
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules/generate:
    post:
      summary: AI 일정 생성 요청
      description: AI를 통해 여행 일정을 생성합니다
      operationId: generateSchedule
      x-user-story: UFR-TRIP-050
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateScheduleRequest'
            example:
              startTime: "09:00"
              specialRequests: "박물관 위주로 일정을 짜주세요"
      responses:
        '202':
          description: 생성 요청 접수
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateScheduleResponse'
              example:
                requestId: "req_202501_001"
                status: "processing"
                message: "일정 생성이 시작되었습니다"
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules/generate/{requestId}/status:
    get:
      summary: AI 일정 생성 상태 확인
      description: AI 일정 생성 진행 상황을 확인합니다
      operationId: getGenerationStatus
      x-user-story: UFR-TRIP-050
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerationStatusResponse'
              example:
                requestId: "req_202501_001"
                status: "processing"
                progress: 75
                message: "장소 정보를 분석하고 있습니다..."
                estimatedTime: 10
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules:
    get:
      summary: 생성된 일정 조회
      description: AI가 생성한 일정을 조회합니다
      operationId: getSchedules
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: day
          in: query
          description: 특정 날짜의 일정만 조회
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleListResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules/days/{day}:
    put:
      summary: 일자별 일정 수정
      description: 특정 날짜의 일정을 수정합니다
      operationId: updateDaySchedule
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: day
          in: path
          required: true
          description: 일자 (1부터 시작)
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduleRequest'
      responses:
        '200':
          description: 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules/days/{day}/regenerate:
    post:
      summary: 일자별 일정 재생성
      description: 특정 날짜의 일정을 다시 생성합니다
      operationId: regenerateDaySchedule
      x-user-story: UFR-TRIP-070
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: day
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegenerateScheduleRequest'
      responses:
        '202':
          description: 재생성 요청 접수
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateScheduleResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          description: 재생성 횟수 초과
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []

  /trips/{tripId}/schedules/export:
    post:
      summary: 일정 내보내기
      description: 생성된 일정을 다양한 형식으로 내보냅니다
      operationId: exportSchedule
      x-user-story: UFR-TRIP-100
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportScheduleRequest'
            example:
              format: "pdf"
              includeMap: true
      responses:
        '200':
          description: 내보내기 성공
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
      security:
        - bearerAuth: []

  /trips/{tripId}/places/{placeId}/recommendations:
    get:
      summary: 일정 내 장소의 AI 추천정보 조회
      description: 여행 일정에 포함된 장소의 AI 추천정보를 조회합니다
      operationId: getSchedulePlaceRecommendations
      x-user-story: UFR-TRIP-060
      x-controller: ScheduleController
      tags:
        - schedules
      parameters:
        - $ref: '#/components/parameters/TripId'
        - name: placeId
          in: path
          required: true
          description: 장소 ID
          schema:
            type: string
        - name: day
          in: query
          description: 일차 (추가 컨텍스트용)
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  placeId:
                    type: string
                  placeName:
                    type: string
                  recommendations:
                    type: object
                    properties:
                      reasons:
                        type: array
                        items:
                          type: string
                      tips:
                        type: object
                        properties:
                          description:
                            type: string
                          events:
                            type: array
                            items:
                              type: string
                          bestVisitTime:
                            type: string
                          estimatedDuration:
                            type: string
                          photoSpots:
                            type: array
                            items:
                              type: string
                          practicalTips:
                            type: array
                            items:
                              type: string
                  context:
                    type: object
                    properties:
                      day:
                        type: integer
                      previousPlace:
                        type: string
                      nextPlace:
                        type: string
                  fromCache:
                    type: boolean
              example:
                placeId: "place_001"
                placeName: "마리엔플라츠"
                recommendations:
                  reasons:
                    - "가족 구성원을 고려한 편안한 일정입니다"
                    - "이전 장소에서 도보로 쉽게 이동 가능합니다"
                  tips:
                    description: "뮌헨의 중심 광장"
                    events:
                      - "매일 11시 시계탑 인형극"
                    bestVisitTime: "오전 10시"
                    estimatedDuration: "1시간"
                    photoSpots:
                      - "시계탑 정면"
                    practicalTips:
                      - "주변 카페에서 휴식"
                context:
                  day: 2
                  previousPlace: "뮌헨 레지덴츠"
                  nextPlace: "호프브로이하우스"
                fromCache: false
        '202':
          description: AI 서비스에 생성 요청됨
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  estimatedTime:
                    type: integer
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

components:
  schemas:
    CreateTripRequest:
      type: object
      required:
        - tripName
        - transportMode
      properties:
        tripName:
          type: string
          maxLength: 16
          description: 여행명
          example: "독일 뮌헨 여행"
        transportMode:
          type: string
          enum: [public, car]
          description: "이동수단 (public: 대중교통, car: 자동차)"
          example: "car"

    UpdateTripRequest:
      type: object
      properties:
        tripName:
          type: string
          maxLength: 16
          description: 여행명
        transportMode:
          type: string
          enum: [public, car]
          description: 이동수단

    TripResponse:
      type: object
      properties:
        tripId:
          type: string
          description: 여행 ID
        tripName:
          type: string
          description: 여행명
        transportMode:
          type: string
          enum: [public, car]
          description: 이동수단
        status:
          type: string
          enum: [planning, ongoing, completed]
          description: 여행 상태
        currentStep:
          type: string
          description: 현재 진행 단계
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    TripListResponse:
      type: object
      properties:
        trips:
          type: array
          items:
            type: object
            properties:
              tripId:
                type: string
              tripName:
                type: string
              status:
                type: string
                enum: [planning, ongoing, completed]
              currentStep:
                type: string
              startDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
              memberCount:
                type: integer
              destinationCount:
                type: integer
              progress:
                type: integer
                description: 진행률 (0-100)
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
        totalCount:
          type: integer
        currentPage:
          type: integer
        totalPages:
          type: integer

    TripDetailResponse:
      allOf:
        - $ref: '#/components/schemas/TripResponse'
        - type: object
          properties:
            startDate:
              type: string
              format: date
            endDate:
              type: string
              format: date
            members:
              type: array
              items:
                $ref: '#/components/schemas/MemberResponse'
            destinations:
              type: array
              items:
                $ref: '#/components/schemas/DestinationResponse'
            hasSchedule:
              type: boolean
              description: 생성된 일정 존재 여부

    CreateMemberRequest:
      type: object
      required:
        - name
        - age
        - gender
        - healthStatus
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 20
          description: 멤버 이름
        age:
          type: integer
          minimum: 1
          maximum: 120
          description: 나이
        gender:
          type: string
          enum: [male, female]
          description: 성별
        healthStatus:
          type: string
          enum: [excellent, good, caution, limited]
          description: |
            건강상태
            - excellent: 우수 (모든 활동 가능)
            - good: 양호 (일반적인 활동 가능)
            - caution: 주의 (격렬한 활동 제한)
            - limited: 제한 (휴식 위주 활동)
        preferences:
          type: array
          items:
            type: string
            enum: [sightseeing, shopping, culture, nature, sports, rest]
          description: 활동 선호도 (복수 선택)

    UpdateMemberRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 20
        age:
          type: integer
          minimum: 1
          maximum: 120
        gender:
          type: string
          enum: [male, female]
        healthStatus:
          type: string
          enum: [excellent, good, caution, limited]
        preferences:
          type: array
          items:
            type: string
            enum: [sightseeing, shopping, culture, nature, sports, rest]

    MemberResponse:
      type: object
      properties:
        memberId:
          type: string
        name:
          type: string
        age:
          type: integer
        gender:
          type: string
        healthStatus:
          type: string
        preferences:
          type: array
          items:
            type: string

    UpdateTripBasicInfoRequest:
      type: object
      required:
        - tripName
        - transportMode
        - members
      properties:
        tripName:
          type: string
          maxLength: 16
          description: 여행명
        transportMode:
          type: string
          enum: [public, car]
          description: 이동수단
        members:
          type: array
          items:
            $ref: '#/components/schemas/CreateMemberRequest'
          minItems: 1
          description: 멤버 목록 (기존 멤버는 모두 교체됩니다)

    TripBasicInfoResponse:
      type: object
      properties:
        tripId:
          type: string
        tripName:
          type: string
        transportMode:
          type: string
        members:
          type: array
          items:
            $ref: '#/components/schemas/MemberResponse'
        updatedAt:
          type: string
          format: date-time

    CreateDestinationRequest:
      type: object
      required:
        - destinationName
        - nights
      properties:
        destinationName:
          type: string
          maxLength: 20
          description: 여행지명
        nights:
          type: integer
          minimum: 1
          description: 숙박일수
        accommodation:
          type: string
          maxLength: 20
          description: 숙소명
        checkInTime:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: 체크인 시간 (HH:MM)
        checkOutTime:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: 체크아웃 시간 (HH:MM)

    UpdateDestinationRequest:
      type: object
      properties:
        destinationName:
          type: string
          maxLength: 20
        nights:
          type: integer
          minimum: 1
        accommodation:
          type: string
          maxLength: 20
        checkInTime:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
        checkOutTime:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'

    DestinationResponse:
      type: object
      properties:
        destinationId:
          type: string
        destinationName:
          type: string
        nights:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        accommodation:
          type: string
        checkInTime:
          type: string
        checkOutTime:
          type: string
        order:
          type: integer
          description: 방문 순서

    UpdateDestinationsBatchRequest:
      type: object
      required:
        - destinations
      properties:
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/CreateDestinationRequest'
          minItems: 1
          description: 여행지 목록 (기존 여행지는 모두 교체됩니다)

    DestinationsBatchResponse:
      type: object
      properties:
        tripId:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/DestinationResponse'
        totalDays:
          type: integer
          description: 총 여행 일수
        startDate:
          type: string
          format: date
          description: 여행 시작일
        endDate:
          type: string
          format: date
          description: 여행 종료일
        updatedAt:
          type: string
          format: date-time

    GenerateScheduleRequest:
      type: object
      required:
        - startTime
      properties:
        startTime:
          type: string
          pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: 여행 시작 시간 (HH:MM)
          example: "09:00"
        specialRequests:
          type: string
          maxLength: 500
          description: 특별 요청사항
          example: "박물관 위주로 일정을 짜주세요"

    GenerateScheduleResponse:
      type: object
      properties:
        requestId:
          type: string
          description: 생성 요청 ID
        status:
          type: string
          enum: [queued, processing, completed, failed]
        message:
          type: string

    GenerationStatusResponse:
      type: object
      properties:
        requestId:
          type: string
        status:
          type: string
          enum: [queued, processing, completed, failed]
        progress:
          type: integer
          minimum: 0
          maximum: 100
          description: 진행률 (%)
        message:
          type: string
          description: 현재 진행 상황 메시지
        estimatedTime:
          type: integer
          description: 예상 남은 시간 (초)
        error:
          type: string
          description: 오류 메시지 (실패 시)

    ScheduleListResponse:
      type: object
      properties:
        tripId:
          type: string
        schedules:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleResponse'

    ScheduleResponse:
      type: object
      properties:
        day:
          type: integer
          description: 일차
        date:
          type: string
          format: date
        city:
          type: string
          description: 도시명
        weather:
          type: object
          properties:
            condition:
              type: string
              description: 날씨 상태
            temperature:
              type: object
              properties:
                min:
                  type: number
                max:
                  type: number
            icon:
              type: string
              description: 날씨 아이콘 코드
        places:
          type: array
          items:
            type: object
            properties:
              placeId:
                type: string
              placeName:
                type: string
              category:
                type: string
              startTime:
                type: string
                pattern: '^([01]?[0-9]|2[0-3]):[0-5][0-9]$'
              duration:
                type: integer
                description: 소요 시간 (분)
              transportation:
                type: object
                properties:
                  type:
                    type: string
                    enum: [walk, car, public]
                  duration:
                    type: integer
                    description: 이동 시간 (분)
                  distance:
                    type: number
                    description: 거리 (km)
                  route:
                    type: string
                    description: 경로 설명
              healthConsideration:
                type: object
                properties:
                  restPoints:
                    type: array
                    items:
                      type: string
                  accessibility:
                    type: array
                    items:
                      type: string
                      enum: [elevator, ramp, wheelchair]
                  walkingDistance:
                    type: number
                    description: 도보 거리 (km)
              order:
                type: integer
                description: 방문 순서

    UpdateScheduleRequest:
      type: object
      properties:
        places:
          type: array
          items:
            type: object
            properties:
              placeId:
                type: string
              order:
                type: integer

    RegenerateScheduleRequest:
      type: object
      properties:
        specialRequests:
          type: string
          maxLength: 500
          description: 재생성 시 추가 요청사항

    ExportScheduleRequest:
      type: object
      required:
        - format
      properties:
        format:
          type: string
          enum: [pdf, image]
          description: 내보내기 형식
        includeMap:
          type: boolean
          default: true
          description: 지도 포함 여부
        days:
          type: array
          items:
            type: integer
          description: 특정 일자만 내보내기 (비어있으면 전체)

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: 오류 코드
        message:
          type: string
          description: 오류 메시지
        details:
          type: object
          description: 추가 오류 정보

  parameters:
    TripId:
      name: tripId
      in: path
      required: true
      description: 여행 ID
      schema:
        type: string

    MemberId:
      name: memberId
      in: path
      required: true
      description: 멤버 ID
      schema:
        type: string

    DestinationId:
      name: destinationId
      in: path
      required: true
      description: 여행지 ID
      schema:
        type: string

  responses:
    BadRequest:
      description: 잘못된 요청
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "INVALID_REQUEST"
            message: "필수 항목이 누락되었습니다"
            details:
              missing: ["tripName"]

    NotFound:
      description: 리소스를 찾을 수 없음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: "NOT_FOUND"
            message: "요청한 여행을 찾을 수 없습니다"

    Unauthorized:
      description: 인증되지 않음
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT 토큰을 사용한 인증